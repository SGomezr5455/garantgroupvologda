from django.db import models


class Product(models.Model):
    title = models.CharField('–ù–∞–∑–≤–∞–Ω–∏–µ', max_length=200)
    price = models.DecimalField('–¶–µ–Ω–∞', max_digits=10, decimal_places=0)
    description = models.TextField('–û–ø–∏—Å–∞–Ω–∏–µ')
    image = models.ImageField('–ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', upload_to='products/', blank=True, null=True)

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '–¢–æ–≤–∞—Ä'
        verbose_name_plural = '–¢–æ–≤–∞—Ä—ã'


class ProductPrice(models.Model):
    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='prices', verbose_name='–¢–æ–≤–∞—Ä')
    name = models.CharField('–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞/—É—Å–ª—É–≥–∏', max_length=200)
    price = models.DecimalField('–¶–µ–Ω–∞', max_digits=10, decimal_places=0)
    description = models.TextField('–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞', blank=True)
    order = models.PositiveIntegerField('–ü–æ—Ä—è–¥–æ–∫', default=0)

    class Meta:
        verbose_name = '–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞'
        verbose_name_plural = '–¶–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞'
        ordering = ['order', 'price']

    def __str__(self):
        return f"{self.product.title} - {self.name}"

    def formatted_price(self):
        return f"{self.price:,} ‚ÇΩ".replace(',', ' ')


class ProductImage(models.Model):
    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='gallery', verbose_name='–¢–æ–≤–∞—Ä')
    image = models.ImageField('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', upload_to='products/gallery/')
    alt_text = models.CharField('–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', max_length=200, blank=True)
    order = models.PositiveIntegerField('–ü–æ—Ä—è–¥–æ–∫', default=0)

    def __str__(self):
        return f'{self.product.title} - –§–æ—Ç–æ {self.order}'

    class Meta:
        verbose_name = '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞'
        verbose_name_plural = '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞'
        ordering = ['order']


class AdditionalService(models.Model):
    """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ - –æ–±—â–∏–µ –¥–ª—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤"""
    title = models.CharField('–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏', max_length=200)
    emoji = models.CharField('–≠–º–æ–¥–∑–∏', max_length=10, default='‚ú®', help_text='–ù–∞–ø—Ä–∏–º–µ—Ä: üî•, üíß, üåø')
    description = models.TextField('–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏')
    price = models.DecimalField('–¶–µ–Ω–∞', max_digits=10, decimal_places=0, null=True, blank=True,
                                help_text='–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ —Ü–µ–Ω–∞ –Ω–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞')
    order = models.PositiveIntegerField('–ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è', default=0)
    is_active = models.BooleanField('–ê–∫—Ç–∏–≤–Ω–∞', default=True)

    def __str__(self):
        return f'{self.emoji} {self.title}'

    def formatted_price(self):
        if self.price:
            return f"{self.price:,} ‚ÇΩ".replace(',', ' ')
        return "–£—Ç–æ—á–Ω—è–π—Ç–µ —Ü–µ–Ω—É"

    class Meta:
        verbose_name = '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —É—Å–ª—É–≥–∞'
        verbose_name_plural = '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏'
        ordering = ['order']


class ServiceImage(models.Model):
    """–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥"""
    service = models.ForeignKey(AdditionalService, on_delete=models.CASCADE, related_name='images',
                                verbose_name='–£—Å–ª—É–≥–∞')
    image = models.ImageField('–§–æ—Ç–æ —É—Å–ª—É–≥–∏', upload_to='services/')
    alt_text = models.CharField('–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', max_length=200, blank=True)
    order = models.PositiveIntegerField('–ü–æ—Ä—è–¥–æ–∫', default=0)

    def __str__(self):
        return f'{self.service.title} - –§–æ—Ç–æ {self.order}'

    class Meta:
        verbose_name = '–§–æ—Ç–æ —É—Å–ª—É–≥–∏'
        verbose_name_plural = '–§–æ—Ç–æ —É—Å–ª—É–≥'
        ordering = ['order']


class WorkPhoto(models.Model):
    title = models.CharField('–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã', max_length=200, blank=True)
    image = models.ImageField('–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', upload_to='works/')
    created_at = models.DateTimeField('–°–æ–∑–¥–∞–Ω–æ', auto_now_add=True)

    def __str__(self):
        return self.title or f'–§–æ—Ç–æ #{self.pk}'

    class Meta:
        verbose_name = '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Ä–∞–±–æ—Ç—ã'
        verbose_name_plural = '–ì–∞–ª–µ—Ä–µ—è —Ä–∞–±–æ—Ç'


class OrderRequest(models.Model):
    fio = models.CharField('–§–ò–û', max_length=200)
    phone = models.CharField('–¢–µ–ª–µ—Ñ–æ–Ω', max_length=20)
    email = models.EmailField('Email')
    message = models.TextField('–°–æ–æ–±—â–µ–Ω–∏–µ')
    created_at = models.DateTimeField('–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', auto_now_add=True)

    def __str__(self):
        return f'–ó–∞–∫–∞–∑ –æ—Ç {self.fio} - {self.created_at.strftime("%d.%m.%Y")}'

    class Meta:
        verbose_name = '–ó–∞–∫–∞–∑'
        verbose_name_plural = '–ó–∞–∫–∞–∑—ã'
        ordering = ['-created_at']


class CompanyInfo(models.Model):
    title = models.CharField('–ó–∞–≥–æ–ª–æ–≤–æ–∫', max_length=200, default="–û –∫–æ–º–ø–∞–Ω–∏–∏")
    description = models.TextField('–û–ø–∏—Å–∞–Ω–∏–µ')

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏'
        verbose_name_plural = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏'
