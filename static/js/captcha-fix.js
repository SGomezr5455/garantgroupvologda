(function() {
    'use strict';

    console.log('üîß CaptchaManager: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è...');

    // –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–ø—á–µ–π
    class CaptchaManager {
        constructor(canvasId, refreshBtnId, inputId, formId) {
            console.log(`üìã CaptchaManager: –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è ${canvasId}`);

            this.canvas = document.getElementById(canvasId);
            this.refreshBtn = document.getElementById(refreshBtnId);
            this.input = document.getElementById(inputId);
            this.form = document.getElementById(formId);
            this.currentCode = '';

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            if (!this.canvas) {
                console.warn(`‚ö†Ô∏è Canvas –Ω–µ –Ω–∞–π–¥–µ–Ω: ${canvasId}`);
                return;
            }
            if (!this.refreshBtn) {
                console.warn(`‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${refreshBtnId}`);
                return;
            }
            if (!this.input) {
                console.warn(`‚ö†Ô∏è –ü–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: ${inputId}`);
                return;
            }

            console.log(`‚úÖ –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è ${canvasId}`);

            this.ctx = this.canvas.getContext('2d');
            this.init();
        }

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–¥–∞ (–∏—Å–∫–ª—é—á–µ–Ω—ã –ø–æ—Ö–æ–∂–∏–µ —Å–∏–º–≤–æ–ª—ã)
        generateCode() {
            const chars = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789';
            let code = '';
            for (let i = 0; i < 6; i++) {
                code += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            console.log(`üîë –ù–æ–≤—ã–π –∫–æ–¥ –∫–∞–ø—á–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: ${code}`);
            return code;
        }

        // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞–ø—á–∏ –Ω–∞ canvas
        drawCaptcha() {
            const { canvas, ctx, currentCode } = this;

            // –û—á–∏—Å—Ç–∫–∞
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            // –§–æ–Ω —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º
            const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);
            gradient.addColorStop(0, '#2d3748');
            gradient.addColorStop(1, '#1a202c');
            ctx.fillStyle = gradient;
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            // –õ–∏–Ω–∏–∏ –ø–æ–º–µ—Ö
            for (let i = 0; i < 5; i++) {
                ctx.strokeStyle = `rgba(255, 107, 0, ${Math.random() * 0.3 + 0.1})`;
                ctx.lineWidth = Math.random() * 2 + 1;
                ctx.beginPath();
                ctx.moveTo(Math.random() * canvas.width, Math.random() * canvas.height);
                ctx.lineTo(Math.random() * canvas.width, Math.random() * canvas.height);
                ctx.stroke();
            }

            // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –±—É–∫–≤ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
            ctx.font = 'bold 32px Arial';
            ctx.textAlign = 'center';
            ctx.textBaseline = 'middle';

            const letterSpacing = canvas.width / (currentCode.length + 1);

            for (let i = 0; i < currentCode.length; i++) {
                ctx.save();

                const x = letterSpacing * (i + 1);
                const y = canvas.height / 2 + (Math.random() - 0.5) * 10;
                const angle = (Math.random() - 0.5) * 0.4;

                // –¢–µ–Ω—å –¥–ª—è –±—É–∫–≤
                ctx.shadowColor = 'rgba(255, 107, 0, 0.5)';
                ctx.shadowBlur = 3;
                ctx.shadowOffsetX = 2;
                ctx.shadowOffsetY = 2;

                // –¶–≤–µ—Ç –±—É–∫–≤
                ctx.fillStyle = '#ffffff';

                ctx.translate(x, y);
                ctx.rotate(angle);
                ctx.fillText(currentCode[i], 0, 0);
                ctx.restore();
            }

            // –¢–æ—á–∫–∏ –ø–æ–º–µ—Ö
            for (let i = 0; i < 80; i++) {
                ctx.fillStyle = `rgba(255, 107, 0, ${Math.random() * 0.3})`;
                const size = Math.random() * 2 + 1;
                ctx.fillRect(
                    Math.random() * canvas.width,
                    Math.random() * canvas.height,
                    size, size
                );
            }

            console.log('üé® –ö–∞–ø—á–∞ –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω–∞');
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–ø—á–∏
        refresh() {
            this.currentCode = this.generateCode();
            this.drawCaptcha();
            this.input.value = '';
            console.log('üîÑ –ö–∞–ø—á–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
        validate(userInput) {
            const isValid = userInput.toUpperCase() === this.currentCode;
            console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ø—á–∏: ${isValid ? '‚úÖ –í–µ—Ä–Ω–æ' : '‚ùå –ù–µ–≤–µ—Ä–Ω–æ'}`);
            return isValid;
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        init() {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CaptchaManager');

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –∫–∞–ø—á—É
            this.refresh();

            // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å preventDefault
            this.refreshBtn.addEventListener('click', (e) => {
                console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–ø—á–∏');
                e.preventDefault();
                e.stopPropagation();
                this.refresh();
                return false;
            });

            console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');

            // –£–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –≤–≤–æ–¥–µ
            this.input.addEventListener('input', () => {
                this.input.classList.remove('error');
                const errorMsg = this.input.parentElement.querySelector('.error-message');
                if (errorMsg) {
                    errorMsg.style.display = 'none';
                }
            });

            // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
            if (this.form) {
                this.form.addEventListener('submit', (e) => {
                    console.log('üì§ –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã');
                    const isValid = this.validate(this.input.value);

                    if (!isValid) {
                        e.preventDefault();
                        e.stopPropagation();

                        console.log('‚ùå –ö–∞–ø—á–∞ –Ω–µ–≤–µ—Ä–Ω–∞, —Ñ–æ—Ä–º–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');

                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                        this.input.classList.add('error');
                        const errorMsg = this.input.parentElement.querySelector('.error-message');
                        if (errorMsg) {
                            errorMsg.style.display = 'block';
                            errorMsg.textContent = '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –∫–∞–ø—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
                        } else {
                            alert('–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –∫–∞–ø—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                        }

                        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ø—á—É
                        this.refresh();

                        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–∞–ø—á–µ
                        this.input.scrollIntoView({ behavior: 'smooth', block: 'center' });

                        return false;
                    }

                    console.log('‚úÖ –ö–∞–ø—á–∞ –≤–µ—Ä–Ω–∞, —Ñ–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è');
                });

                console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
            }
        }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
    document.addEventListener('DOMContentLoaded', function() {
        console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞–ø—á–∏');

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
        setTimeout(() => {
            console.log('‚è∞ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–ø—á–∏ —á–µ—Ä–µ–∑ 100–º—Å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM');

            // –ö–∞–ø—á–∞ –¥–ª—è —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–∞ –∫—Ä–µ–¥–∏—Ç (–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
            const consultationCaptcha = new CaptchaManager(
                'captcha-canvas-1',
                'refresh-captcha-1',
                'captcha-input-1',
                'consultation-form'
            );

            // –ö–∞–ø—á–∞ –¥–ª—è —Ñ–æ—Ä–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
            const orderCaptcha = new CaptchaManager(
                'captcha-canvas-2',
                'refresh-captcha-2',
                'captcha-input-2',
                'order-form'
            );

            console.log('‚úÖ CaptchaManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –≤—Å–µ—Ö —Ñ–æ—Ä–º');
        }, 100);
    });

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener('load', function() {
        console.log('üåê –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –∫–∞–ø—á–∏
        const refreshButtons = document.querySelectorAll('[id^="refresh-captcha"]');
        console.log(`üîç –ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–ø—á–∏: ${refreshButtons.length}`);

        refreshButtons.forEach((btn, index) => {
            console.log(`  ${index + 1}. ID: ${btn.id}, type: ${btn.type || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
            if (!btn.type || btn.type === 'submit') {
                console.warn(`  ‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –£ –∫–Ω–æ–ø–∫–∏ ${btn.id} –Ω–µ—Ç type="button"!`);
            }
        });
    });

})();